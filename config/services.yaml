# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    #locale: 'en' 
        #(en -> english, it -> italian ecc..)
    photos_directory: '%kernel.project_dir%/public/photos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.appartement:
        class: App\Admin\AppartementAdmin
        arguments: [~, App\Entity\Appartement, App\Controller\AppartementAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Appartement }
        public: true

    admin.demande:
        class: App\Admin\DemandeAdmin
        arguments: [~, App\Entity\Demande, App\Controller\DemandeAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Demande }
        public: true

    admin.arrondissement:
        class: App\Admin\ArrondissementAdmin
        arguments: [~, App\Entity\Arrondissement, App\Controller\ArrondissementAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Arrondissement }
        public: true

    admin.utilisateur:
        class: App\Admin\UtilisateurAdmin
        arguments: [~, App\Entity\Utilisateur, App\Controller\UtilisateurAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Utilisateur }
        public: true
